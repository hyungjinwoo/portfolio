/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.40
 * Generated at: 2019-06-11 05:10:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member.model.vo.Member;
import java.util.List;

public final class member_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");

	List<Member> memberList= (List<Member>)request.getAttribute("memberList");

	System.out.println("member.jsp="+memberList);
	String pageBar = (String)request.getAttribute("pageBar");
	
	int cPage = (Integer)request.getAttribute("cPage");
	int numPerPage = (Integer)request.getAttribute("numPerPage"); 

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원정보수정</title>\r\n");
      out.write("<script\r\n");
      out.write("  src=\"https://code.jquery.com/jquery-3.4.0.min.js\"\r\n");
      out.write("  integrity=\"sha256-BJeo0qm959uMBGb65z40ejJYGSgR7REI4+CW1fNKwOg=\"\r\n");
      out.write("  crossorigin=\"anonymous\"></script>\r\n");
      out.write("  \r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/admin/member.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.8.1/css/all.css\" integrity=\"sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf\" crossorigin=\"anonymous\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/css/admin/member.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div id=\"memberFind\">\r\n");
      out.write("\t<div id=\"memberFindInput\">\r\n");
      out.write("\t\r\n");
      out.write("\t<!--  -->\r\n");
      out.write("\t\t\t<label for=\"leave\"></label>\r\n");
      out.write("\t\t\t\t<input type=\"radio\" name=\"leave\" id=\"nonleave\" value=\"nonleave\" checked>\r\n");
      out.write("\t\t\t\t<label for=\"nonleave\">현재 회원</label>\r\n");
      out.write("\t\t\t\t<input type=\"radio\" name=\"leave\" id=\"leave\" value=\"leave\">\r\n");
      out.write("\t\t\t\t<label for=\"leave\">탈퇴 회원</label>\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t<!--  -->\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t<label for=\"memberName\"></label>\r\n");
      out.write("\t\t\t<input type=\"text\" name=\"memberName\" id=\"memberName\" placeholder=\"name\"/>\r\n");
      out.write("\t\t\t<br />\r\n");
      out.write("\t\t\t<label for=\"findmemberId\"></label>\r\n");
      out.write("\t\t\t<input type=\"text\" name=\"findmemberId\" id=\"findmemberId\" placeholder=\"id\"/>\r\n");
      out.write("\t\t\t<br />\r\n");
      out.write("\t\t\t<label for=\"phone\"></label>\r\n");
      out.write("\t\t\t<input type=\"text\" name=\"phone\" id=\"phone\" placeholder=\"phone\"/>\r\n");
      out.write("\t\t\t<br />\r\n");
      out.write("\t\t\t<label for=\"gender\"></label>\r\n");
      out.write("\t\t\t\t<input type=\"radio\" name=\"gender\" id=\"gender_m\" value=\"M\">\r\n");
      out.write("\t\t\t\t<label for=\"gender_m\">Man</label>\r\n");
      out.write("\t\t\t\t<input type=\"radio\" name=\"gender\" id=\"gender_f\" value=\"F\">\r\n");
      out.write("\t\t\t\t<label for=\"gender_f\">Women</label>\r\n");
      out.write("\t\t\t<br />\r\n");
      out.write("\t\t\t<button id=\"findBtn\">Search</button>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"memberFindBody\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div id=\"findResult\">\r\n");
      out.write("\t\t\t<div id=\"memberFindTable\">\r\n");
      out.write("\t\t \t\t<table id=\"memberFindTablebo\">\r\n");
      out.write("\t\t\t\t\t<tr id=\"memberFindTableHead\">\r\n");
      out.write("\t\t\t\t\t\t<th>이름</th>\r\n");
      out.write("\t\t\t\t\t\t<th>아이디</th>\r\n");
      out.write("\t\t\t\t\t\t<th>전화번호</th>\r\n");
      out.write("\t\t\t\t\t\t<th>성별</th>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t");
if(memberList.size()<=0){
						
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<tr >\r\n");
      out.write("\t\t\t\t\t\t\t<td colspan=\"4\">회원이 없습니다.</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t");

					}else{
					
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
for(Member m:memberList){
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<tr onclick=\"memberInfoModi('");
      out.print(m.getMemberId() );
      out.write("')\" >\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(m.getMemberName() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(m.getMemberId() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>0");
      out.print(m.getTel() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td>");
      out.print(m.getGender());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div id=\"pageBar\">");
      out.print(pageBar );
      out.write("</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("function memberInfoModi(a){\r\n");
      out.write("\r\n");
      out.write("\t location.href = '");
      out.print(request.getContextPath());
      out.write("/member/memberMyPage?memberId='+a;\r\n");
      out.write("}\r\n");
      out.write(" </script>\r\n");
      out.write(" \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
