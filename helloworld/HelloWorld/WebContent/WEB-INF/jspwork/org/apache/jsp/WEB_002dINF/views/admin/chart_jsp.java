/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.40
 * Generated at: 2019-06-11 05:02:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.json.simple.JSONArray;

public final class chart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.json.simple.JSONArray");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    ");

    JSONArray pieChartlist = (JSONArray)request.getAttribute("pieChartlist");
    JSONArray geoChartlist = (JSONArray)request.getAttribute("geoChartlist");
    JSONArray columnChart = (JSONArray)request.getAttribute("columnChart");
    
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/css/admin/chart.css\">\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("$(function(){\r\n");
      out.write("\tpieChart('pieChart');\r\n");
      out.write("\tColumnChart(\"ColumnChart\")\r\n");
      out.write("\tGeoChart2('main');\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function pieChart(va){\r\n");
      out.write("    google.charts.load('current', {'packages':['corechart']});\r\n");
      out.write("    google.charts.setOnLoadCallback(draw2Chart);\r\n");
      out.write("\r\n");
      out.write("    function draw2Chart() {\r\n");
      out.write("\r\n");
      out.write("     var data = google.visualization.arrayToDataTable(");
      out.print(pieChartlist);
      out.write(");\r\n");
      out.write("      \r\n");
      out.write("      var options = {\r\n");
      out.write("                title: '도시 선호도',\r\n");
      out.write("            \tpieHole: 0.2,\r\n");
      out.write("    \t        width: 430,\r\n");
      out.write("    \t        height: 230\r\n");
      out.write("    \t      };\r\n");
      out.write("      \r\n");
      out.write("\r\n");
      out.write("      var chart = new google.visualization.PieChart(document.getElementById(va));\r\n");
      out.write("\r\n");
      out.write("      chart.draw(data, options);\r\n");
      out.write("   }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function GeoChart2(va){\r\n");
      out.write("      google.charts.load('current', {\r\n");
      out.write("          'packages':['geochart'],\r\n");
      out.write("          'mapsApiKey': 'AIzaSyB2BbISLnHXNWyIA3jjgUEg8q-R-71NlzY'\r\n");
      out.write("        });\r\n");
      out.write("        google.charts.setOnLoadCallback(drawRegionsMap);\r\n");
      out.write("\r\n");
      out.write("        function drawRegionsMap() {\r\n");
      out.write("        var data = google.visualization.arrayToDataTable(");
      out.print(geoChartlist);
      out.write(");\r\n");
      out.write("\r\n");
      out.write("\t\t          var options = {title: '국가별 리뷰수',\r\n");
      out.write("\t\t\t    \t        width: 800,\r\n");
      out.write("\t\t\t    \t        height: 350};\r\n");
      out.write("\r\n");
      out.write("\t\t          var chart = new google.visualization.GeoChart(document.getElementById(va));\r\n");
      out.write("\r\n");
      out.write("\t\t          chart.draw(data, options);\r\n");
      out.write("\t\t        }\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction ColumnChart(va){\r\n");
      out.write("\t\t    google.charts.load(\"current\", {packages:['corechart']});\r\n");
      out.write("\t\t    google.charts.setOnLoadCallback(drawChart);\r\n");
      out.write("\t\t    function drawChart() {\r\n");
      out.write("/* \t        var data = google.visualization.arrayToDataTable([\r\n");
      out.write("\t            ['Genre', \r\n");
      out.write("\t            \t'Fantasy & Sci Fi', 'Romance', 'Mystery/Crime', 'General', \r\n");
      out.write("\t            { role: 'annotation' } ],\r\n");
      out.write("\t            \r\n");
      out.write("\t            ['10대', 10,20,15,18, ''],\r\n");
      out.write("\t            ['20대', 18,65,77,10, ''],\r\n");
      out.write("\t            ['30대', 17,40,45,8, ''],\r\n");
      out.write("\t            ['40대', 56,25,76,55, ''],\r\n");
      out.write("\t            ['50대', 56,25,76,55, ''],\r\n");
      out.write("\t            ['60대', 56,25,76,55, '']\r\n");
      out.write("\t          ]); */\r\n");
      out.write("\t          var data = google.visualization.arrayToDataTable(");
      out.print(columnChart);
      out.write(");\r\n");
      out.write("\r\n");
      out.write("      var view = new google.visualization.DataView(data);\r\n");
      out.write("      view.setColumns([0, 1, 2,3,4,\r\n");
      out.write("                       {\r\n");
      out.write("    \t  \t\t\t\tcalc: \"stringify\",\r\n");
      out.write("                         //sourceColumn: \"\",\r\n");
      out.write("                         type: \"string\",\r\n");
      out.write("                         role: \"annotation\" },\r\n");
      out.write("                       5]);\r\n");
      out.write("\r\n");
      out.write("      var options = {\r\n");
      out.write("    \t\t  \ttitle: '연령대별 취향',\r\n");
      out.write("    \t        width: 400,\r\n");
      out.write("    \t        height: 230,\r\n");
      out.write("    \t        legend: { position: 'top', maxLines: 3 },\r\n");
      out.write("    \t        bar: { groupWidth: '75%' },\r\n");
      out.write("    \t        isStacked: true,\r\n");
      out.write("    \t      };\r\n");
      out.write("      \r\n");
      out.write("      var chart = new google.visualization.ColumnChart(document.getElementById(va));\r\n");
      out.write("      chart.draw(view, options);\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("  <body>\r\n");
      out.write("  \t<div id=\"all-container\">\r\n");
      out.write("  \t\r\n");
      out.write("\t\t<div id=\"chart-container1\">\r\n");
      out.write("\t\t\t<div class=\"chart-item\" id=\"pieChart\"></div>\r\n");
      out.write("\t\t\t<div class=\"chart-item\" id=\"ColumnChart\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div id=\"chart-container2\">\r\n");
      out.write("\t\t\t<div class=\"chart-item\" id=\"main\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write(" \t\t<div id=\"chart-container3\">\r\n");
      out.write("\t\t</div> \r\n");
      out.write("\t\t\r\n");
      out.write("\t</div>\r\n");
      out.write("  </body>\r\n");
      out.write("  \r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
