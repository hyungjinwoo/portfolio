/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.40
 * Generated at: 2019-06-11 05:34:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import org.json.simple.JSONArray;

public final class map_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("org.json.simple.JSONArray");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("  ");

    JSONArray array = (JSONArray)request.getAttribute("array");
  
      out.write("\r\n");
      out.write("  \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>  \r\n");
      out.write("<head>    \r\n");
      out.write("<title>위도 경도 찾기</title>\r\n");
      out.write("<style>\r\n");
      out.write("@import url('https://fonts.googleapis.com/css?family=Montserrat|Oxygen|Poiret+One|Nanum+Gothic|Song+Myung&display=swap');\r\n");
      out.write("\r\n");
      out.write("#container {\r\n");
      out.write("    display : flex; \r\n");
      out.write("    flex-direction : column;\r\n");
      out.write("    height: 100%;\r\n");
      out.write("}\r\n");
      out.write("           \r\n");
      out.write("#mapCon {\r\n");
      out.write("    flex : 1; \r\n");
      out.write("}\r\n");
      out.write("#searchResult{\r\n");
      out.write("    padding : 5%;\r\n");
      out.write("    flex : 1; \r\n");
      out.write("}\r\n");
      out.write("#searchResult table{\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("    padding : 2%;\r\n");
      out.write("    width:90%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#searchResult table th{\r\n");
      out.write("   padding: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#searchResult table tr#trstart{\r\n");
      out.write("\tfont-size: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#searchResult table td{\r\n");
      out.write("    text-align:center;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("#searchResult table #endtd{\r\n");
      out.write("    border-bottom:1px solid;\r\n");
      out.write("}\r\n");
      out.write("    \r\n");
      out.write("#mapTable{\r\n");
      out.write("    display:none;\r\n");
      out.write("}\r\n");
      out.write("#admin-review-del-btn{\r\n");
      out.write("\tbackground: lightblue;\r\n");
      out.write("\tborder: none;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\tfont-family: \"Nanum Gothic\";\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script async defer src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyB2BbISLnHXNWyIA3jjgUEg8q-R-71NlzY&callback=initMap&libraries=places\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("    \r\n");
      out.write("   var locations = ");
      out.print(array);
      out.write(";\r\n");
      out.write("     \r\n");
      out.write("     function initMap() {\r\n");
      out.write("        \r\n");
      out.write("        var map = new google.maps.Map(document.getElementById('mapCon'), {\r\n");
      out.write("                                          zoom: 1,\r\n");
      out.write("                                          center: {lat: 37.4983454, lng: 127.02810099999999},\r\n");
      out.write("                                          mapTypeId: 'hybrid'\r\n");
      out.write("                                        }\r\n");
      out.write("                                    );\r\n");
      out.write("       var markers = locations.map(function(location, i) {\r\n");
      out.write("          return new google.maps.Marker({\r\n");
      out.write("            position: location,\r\n");
      out.write("            animation: google.maps.Animation.DROP\r\n");
      out.write("          });\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        $.each(markers, function(index,item){\r\n");
      out.write("                markers[index].addListener('dblclick', function() {\r\n");
      out.write("                markers[index].setMap(null);  //마우스 right 클릭시에 마커제거\r\n");
      out.write("            });  \r\n");
      out.write("            \r\n");
      out.write("            markers[index].addListener('click', function() {\r\n");
      out.write("                map.setCenter(markers[index].getPosition()); //마커을 기준으로 가운데로 지도을 옮김\r\n");
      out.write("                markers[index].setAnimation(google.maps.Animation.BOUNCE);\r\n");
      out.write("                map.setZoom(20);\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("        });\r\n");
      out.write("        // Add a marker clusterer to manage the markers.\r\n");
      out.write("        var markerCluster = new MarkerClusterer(map, markers,\r\n");
      out.write("            {imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'});\r\n");
      out.write("        map.addListener('click', function(results) {\r\n");
      out.write("            \r\n");
      out.write("            console.log(results);\r\n");
      out.write("                if(results.placeId==null){\r\n");
      out.write("                    alert(\"장소을 선택하세요\");\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("            var request = {\r\n");
      out.write("                      placeId: results.placeId\r\n");
      out.write("                    };\r\n");
      out.write("                    service = new google.maps.places.PlacesService(map);\r\n");
      out.write("                    service.getDetails(request, placeInfo);\r\n");
      out.write("                    function placeInfo(place, status) {\r\n");
      out.write("                          console.log(place); \r\n");
      out.write("                          /* console.log(place); */\r\n");
      out.write("                          \r\n");
      out.write("                    $.each(place.address_components, function(index, item){\r\n");
      out.write("                        if(place.address_components[index].types[0]=='country'){\r\n");
      out.write("                            $(\"#ncode\").val(place.address_components[index].short_name);\r\n");
      out.write("                        }\r\n");
      out.write("                    });\r\n");
      out.write("                          \r\n");
      out.write("                        $(\"#photo\").empty();\r\n");
      out.write("                        var a=null;\r\n");
      out.write("                        $.each(place.photos, function(index, item){\r\n");
      out.write("                                a+=\"<img src=\"+place.photos[index].getUrl()+\"/>\";\r\n");
      out.write("                            });\r\n");
      out.write("                        \r\n");
      out.write("                        /* $(\"#photo\").html(a); */\r\n");
      out.write("                        $(\"#inlat\").html(place.geometry.location.lat());\r\n");
      out.write("                        $(\"#inlng\").html(place.geometry.location.lng());\r\n");
      out.write("                        $(\"#placeid\").val(place.place_id);                        \r\n");
      out.write("                        $('#pname').val(place.name);\r\n");
      out.write("                        $('#address').val(place.formatted_address);\r\n");
      out.write("                        $('#phone').val(place.international_phone_number);\r\n");
      out.write("                        $(\"#website\").val(place.website);\r\n");
      out.write("                        \r\n");
      out.write("                        var placeId=$(\"#placeid\").val();\r\n");
      out.write("                        $.ajax({\r\n");
      out.write("                            url:\"");
      out.print(request.getContextPath());
      out.write("/admin/mapSearchReview\",\r\n");
      out.write("                            data: \"placeId=\"+placeId,\r\n");
      out.write("                            dataType:\"json\",\r\n");
      out.write("                            success:function(data){\r\n");
      out.write("                                \r\n");
      out.write("                                var table = $(\"<table><tr id='trstart' ><th>리뷰번호</th><th>아이디</th><th>제목</th><th>점수</th><th>좋아요 수</th><th>조회수</th><th>등록일</th></tr></table>\");\r\n");
      out.write("                                for(var i in data){\r\n");
      out.write("                                    var review = data[i];\r\n");
      out.write("                                    console.log(review);\r\n");
      out.write("                                    var html=\"<tr trreviewNo='\"+review.reviewNo+\"'><td>\"+review.reviewNo+\"</td>\";\r\n");
      out.write("                                    html+=\"<td class='reviewCon'>\"+review.memberId+\"</td>\";\r\n");
      out.write("                                    //html+=\"<td>\"+review.placeId+\"</td>\";\r\n");
      out.write("                                    html+=\"<td class='reviewCon'>\"+review.reviewTitle+\"</td>\";\r\n");
      out.write("                                    html+=\"<td class='reviewCon'>\"+review.placeRating+\"</td>\";\r\n");
      out.write("                                    html+=\"<td class='reviewCon'>\"+review.likeCount+\"</td>\";\r\n");
      out.write("                                    html+=\"<td class='reviewCon'>\"+review.readCount+\"</td>\";\r\n");
      out.write("                                    html+=\"<td class='reviewCon'>\"+review.reviewDate+\"</td>\";\r\n");
      out.write("                                    html+=\"<td class='reviewCon'><button id='admin-review-del-btn' reviewNo='\"+review.reviewNo+\"' onclick='reviewDel(this)'>삭제</button></td></tr>\";\r\n");
      out.write("                                    html+=\"<tr id='endtr'><td colspan='7' id='endtd'>\"+review.reviewContent+\"</td></tr>\";\r\n");
      out.write("                                    console.log(html);\r\n");
      out.write("                                    table.append(html);\r\n");
      out.write("                                }\r\n");
      out.write("                                $(\"#searchResult\").html(table); \r\n");
      out.write("                            },\r\n");
      out.write("                            error: function(jqxhr,textStatus, errorThrown){\r\n");
      out.write("                                console.log(\"ajax처리 실패!\");\r\n");
      out.write("                                console.log(jqxhr);\r\n");
      out.write("                                console.log(textStatus);\r\n");
      out.write("                                console.log(errorThrown);\r\n");
      out.write("                            }\r\n");
      out.write("                        });\r\n");
      out.write("                    }\r\n");
      out.write("        });\r\n");
      out.write("     }// end initMap()\r\n");
      out.write("     \r\n");
      out.write("     function reviewDel(e){\r\n");
      out.write("      \r\n");
      out.write("      var conf = confirm(\"정말로 삭제할까요?.\");\r\n");
      out.write("      if(conf){\r\n");
      out.write("          var reveiwNo=$(e).attr(\"reviewno\");\r\n");
      out.write("          $.ajax({\r\n");
      out.write("                url:\"");
      out.print(request.getContextPath());
      out.write("/admin/mapReviewDel\",\r\n");
      out.write("                data: \"reveiwNo=\"+reveiwNo,\r\n");
      out.write("                dataType:\"html\",\r\n");
      out.write("                success:function(data){\r\n");
      out.write("                    alert(\"리뷰 삭제 \"+data+\"!\");\r\n");
      out.write("                    if(data===\"성공\"){\r\n");
      out.write("                        $(\"[trreviewNo=\"+reveiwNo+\"]\").next().remove();\r\n");
      out.write("                        $(\"[trreviewNo=\"+reveiwNo+\"]\").remove();\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                error: function(jqxhr,textStatus, errorThrown){\r\n");
      out.write("                    console.log(\"ajax처리 실패!\");\r\n");
      out.write("                    console.log(jqxhr);\r\n");
      out.write("                    console.log(textStatus);\r\n");
      out.write("                    console.log(errorThrown);\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("      }\r\n");
      out.write("     }\r\n");
      out.write("     \r\n");
      out.write("   </script>\r\n");
      out.write("   </head>\r\n");
      out.write("   \r\n");
      out.write("   <body>\r\n");
      out.write("   \r\n");
      out.write("   <div id=\"container\">\r\n");
      out.write("    <!-- 지도 -->\r\n");
      out.write("    <div id=\"mapCon\"></div>\r\n");
      out.write("    \r\n");
      out.write("    <!-- 선택한 영역에 대한 리뷰 리스트 -->\r\n");
      out.write("    <div id=\"searchResult\"></div>\r\n");
      out.write("    \r\n");
      out.write("        <!-- hidden 영역 -->\r\n");
      out.write("        <table border=\"1\" id=\"mapTable\">\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td colspan=\"2\"></td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <th width=\"100\">위도</th>\r\n");
      out.write("            <td id=\"inlat\"></td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <th>경도</th>\r\n");
      out.write("            <td id=\"inlng\"></td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        \r\n");
      out.write("        <tr>  \r\n");
      out.write("            <th>국가코드</th>\r\n");
      out.write("            <td><input type=\"text\" id=\"ncode\" value=\"\" size=\"50\"/></td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>  \r\n");
      out.write("            <th>placeId</th>\r\n");
      out.write("            <td><input type=\"text\" id=\"placeid\" value=\"\" size=\"50\"/></td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>  \r\n");
      out.write("            <th>장소이름</th>\r\n");
      out.write("            <td><input type=\"text\" id=\"pname\" value=\"\" size=\"50\"/></td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>  \r\n");
      out.write("            <th>주소</th>\r\n");
      out.write("            <td><input type=\"text\" id=\"address\" value=\"\" size=\"50\"/></td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>  \r\n");
      out.write("            <th>phone</th>\r\n");
      out.write("            <td><input type=\"text\" id=\"phone\" value=\"\" size=\"50\"/></td>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>  \r\n");
      out.write("            <th>website</th>\r\n");
      out.write("            <td><input type=\"text\" id=\"website\" value=\"\" size=\"50\"/></td>\r\n");
      out.write("        </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("</div>\r\n");
      out.write("    \r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
